# process_audio.py

import os
from dotenv import load_dotenv
from langchain_google_genai import ChatGoogleGenerativeAI
from langchain_core.messages import HumanMessage

# Carrega as vari√°veis de ambiente do arquivo .env
# Agora ele vai carregar a GOOGLE_API_KEY
load_dotenv()

# Transcri√ß√£o
podcast_transcript = """
Ol√° e bem-vindos ao Futuro Digital. Hoje, vamos mergulhar fundo no conceito de
Intelig√™ncia Artificial Generativa. Vimos um boom de ferramentas como DALL-E para imagens,
e claro, modelos de linguagem como o GPT-4 que podem escrever, resumir e at√© programar.
A quest√£o n√£o √© mais 'se' a IA vai mudar nossas vidas, mas 'como' e 'quando'.
Uma das maiores discuss√µes √© o impacto no mercado de trabalho. Tarefas repetitivas
est√£o sendo automatizadas, mas novas profiss√µes focadas em engenharia de prompt e
curadoria de IA est√£o surgindo. Empresas que adotam essa tecnologia cedo est√£o vendo
ganhos massivos em produtividade. Falaremos tamb√©m sobre os desafios √©ticos, como
vieses nos dados de treinamento e o uso indevido da tecnologia. Fiquem ligados.
"""

# 2. Apontamos para o modelo do Google
# O LangChain automaticamente usar√° a GOOGLE_API_KEY do nosso .env
llm = ChatGoogleGenerativeAI(model="gemini-2.0-flash", temperature=0.7)

# 3. A Engenharia de Prompt.
prompt = f"""
Voc√™ √© um especialista em marketing digital e SEO, especializado em conte√∫do de podcasts.
Sua tarefa √© criar 3 sugest√µes de t√≠tulos para um epis√≥dio de podcast com base na transcri√ß√£o fornecida.

Regras:
- Os t√≠tulos devem ser curtos, impactantes e otimizados para buscas (SEO-friendly).
- Devem despertar curiosidade.
- Devem refletir o conte√∫do principal da transcri√ß√£o.

Transcri√ß√£o do epis√≥dio:
---
{podcast_transcript}
---

Gere os 3 t√≠tulos, separados por uma nova linha.
"""

# Este √© o poder do LangChain: a interface √© consistente.
print("--- üß† Conectando com a IA do Google Gemini para gerar t√≠tulos... ---")

message = HumanMessage(content=prompt)
response = llm.invoke([message])

print("--- ‚ú® T√≠tulos Gerados com Sucesso! ‚ú® ---")
print(response.content)
print("------------------------------------------")